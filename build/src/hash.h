#include <inttypes.h>


const uint64_t BIG_NUMBER = 982451653; // Простое число, меньшее 10 ** 9


/*!
    \brief Высчитывает хэш передаваемой строки

    Итерация вычисления - Берётся ранее вычисленно значения хэша и два новых числа.
    Выполняется операции побитового Исключения и побитового "И" над новыми числами и берётся максимальное из этих операций.
    Получается степень, в которую возводится вычисленное значение хэша по модулю BIG_NUMBER.
    Вычисление хэша заканчивается, когда кончается исходная строка.

    \note Изначальное значение хэша - первый элемент передаваемой строки.

    @param[in] str -> Строка, хем который необходимо посчитать

    @return возвращает вычисленный хэш

*/
uint64_t hash( char* str );

/*!
    Реализация алгоритма быстрого возведения числа \e x в степень \e power по модулю \e mod

    @param[in] x      -> число, которое возводится в степень
    @param[in] power  -> степень, в которую необходимо возводить
    @param[in] mod    -> модуль, по которому будут браться все значения

    @return возвращает ( x ** power ) % mod
*/
uint64_t fastPow( uint64_t x, uint64_t power, uint64_t mod );
